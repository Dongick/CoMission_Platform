spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}

  config:
    import: optional:file:.env[.properties]

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      s3:
        bucket: ${S3_BUCKET}
      region:
        static: ap-northeast-2
      stack:
        auto: false

  data:
    mongodb:
      uri: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}:27017/?authSource=admin&authMechanism=SCRAM-SHA-1
      database: ${MONGODB_DATABASE}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST}:3306/${MYSQL_DATABASE}?serverTimezone=Asia/Seoul&CharacterEncoding=UTF-8
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}

  jwt:
    secret: ${JWT_SECRET}

  security:
    oauth2:
      client:
        registration:
          naver:
            clientId: ${OAUTH2_NAVER_CLIENT_ID}
            clientSecret: ${OAUTH2_NAVER_CLIENT_SECRET}
            redirectUri: ${OAUTH2_NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: name,email

          google:
            clientId: ${OAUTH2_GOOGLE_CLIENT_ID}
            clientSecret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            redirectUri: ${OAUTH2_GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: profile,email

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

app:
  cors:
    allowed-origins: ${APP_CORS_ALLOWED_ORIGINS}